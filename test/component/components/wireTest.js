// Generated by CoffeeScript 1.8.0
(function() {
  define(['cs!WireElm', 'cs!Circuit'], function(WireElm, Circuit) {
    return describe("Wire Component", function() {
      beforeEach(function() {
        this.Circuit = new Circuit();
        return this.wireElm = new WireElm(100, 100, 100, 200, 0, []);
      });
      it("should have correct defaults", function() {
        this.wireElm.x1 === 100;
        this.wireElm.y1 === 100;
        this.wireElm.x2 === 100;
        this.wireElm.y2 === 200;
        return this.wireElm.flags = 0;
      });
      it("should have correct number of posts", function() {
        this.wireElm.getPostCount().should.equal(2);
        return this.wireElm.getInternalNodeCount().should.equal(0);
      });
      it("should not have any internal voltage sources", function() {
        return this.wireElm.getVoltageSourceCount().should.equal(1);
      });
      it("should have correct dump type", function() {
        return this.wireElm.getDumpType().should.equal("w");
      });
      it("should have correct toString()", function() {
        return this.wireElm.toString().should.equal("WireElm");
      });
      it("should be orphaned", function() {
        return this.wireElm.orphaned().should.equal(true);
      });
      return describe("after soldering to circuit", function() {
        beforeEach(function() {
          return this.Circuit.solder(this.wireElm);
        });
        it("should not be orphaned", function() {
          return this.wireElm.orphaned().should.equal(false);
        });
        it("should be stampable", function() {
          return this.wireElm.stamp();
        });
        it("should be steppable", function() {
          return this.wireElm.doStep();
        });
        it("should be drawable", function() {});
        return it("should setPoints", function() {
          return this.wireElm.setPoints();
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=wireTest.js.map
