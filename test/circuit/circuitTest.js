// Generated by CoffeeScript 1.4.0
(function() {

  define(['cs!Circuit', 'cs!CircuitState'], function(Circuit, State) {
    console.log(Circuit);
    return describe("Circuit", function() {
      beforeEach(function() {
        var canvas;
        canvas = $('canvas').get(0);
        this.Circuit = new Circuit(canvas);
        console.log("Loading circuit");
        return console.log(this.Circuit);
      });
      describe("on initialization", function() {
        it("should have no errors", function() {
          this.Circuit.stopMessage === null;
          return this.Circuit.stopElm === null;
        });
        return it("should have correct initial states", function() {
          return this.Circuit.getState() === State.RUN;
        });
      });
      describe("should observe", function() {
        return specify("UIContext", function() {
          return this.Circuit.observers.should.include(this.Circuit.Context);
        });
      });
      describe("should have event listeners for", function() {
        specify("onMouseMove (x, y)", function() {});
        specify("onMouseDown (x, y)", function() {});
        return specify("onError (message)", function() {});
      });
      describe("should dispatch events for", function() {
        specify("update", function() {});
        specify("start", function() {});
        specify("pause", function() {});
        specify("complete", function() {});
        specify("component added (component)", function() {});
        specify("component removed (component)", function() {});
        return specify("component moved (component)", function() {});
      });
      describe("should have one", function() {
        describe("Canvas", function() {});
        specify("Solver", function() {
          return this.Circuit.Solver !== null;
        });
        specify("Params Object", function() {});
        return specify("Hint Object", function() {
          return this.Circuit.Hint !== null;
        });
      });
      describe("should have collection of", function() {
        specify("Voltage Sources", function() {
          return this.Circuit.getVoltageSources().should.be.empty;
        });
        specify("Circuit Components", function() {
          return this.Circuit.getElements().should.be.empty;
        });
        specify("GetElmByIdx should return an empty array", function() {
          return this.Circuit.getElmByIdx(0) === null;
        });
        specify("Nodes", function() {
          return this.Circuit.getNodes().should.be.empty;
        });
        return specify("Oscilloscopes", function() {
          return this.Circuit.getScopes().should.be.empty;
        });
      });
      return describe("apply update", function() {
        beforeEach(function() {
          return this.Circuit.updateCircuit();
        });
        it("should call analyze circuit on the solver", function() {});
        return it("should update after modifying solver", function() {
          return this.Circuit.restartAndRun();
        });
      });
    });
  });

}).call(this);
