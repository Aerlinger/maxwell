// Generated by CoffeeScript 1.4.0
(function() {

  define(['cs!Wire', 'cs!Ground', 'cs!Renderer', 'cs!fs', 'cs!Resistor', 'cs!VoltageSource'], function(fs, Wire, Ground, Renderer, Resistor, VoltageSource) {
    return describe("Should render", function() {
      before(function() {
        return this.Renderer = new Renderer();
      });
      beforeEach(function(done) {
        this.Renderer.clear();
        return done();
      });
      specify("A Resistor", function(done) {
        this.Resistor = new Resistor(50, 50, 50, 150, [500]);
        this.Renderer.drawComponent(this.Resistor);
        return this.Renderer.getCanvas().toBuffer(function(err, buf) {
          if (err) {
            throw err;
          }
          fs.writeFile(__dirname + '/componentImages/resistor.png', buf);
          return done();
        });
      });
      specify("A Wire", function(done) {
        this.Wire = new Wire(50, 50, 50, 150);
        this.Renderer.drawComponent(this.Wire);
        return this.Renderer.getCanvas().toBuffer(function(err, buf) {
          if (err) {
            throw err;
          }
          fs.writeFile(__dirname + '/componentImages/wire.png', buf);
          return done();
        });
      });
      specify("A Voltage Source", function(done) {
        this.VoltageSource = new VoltageSource(50, 50, 50, 150, [500]);
        this.Renderer.drawComponent(this.VoltageSource);
        return this.Renderer.getCanvas().toBuffer(function(err, buf) {
          if (err) {
            throw err;
          }
          fs.writeFile(__dirname + '/componentImages/voltSource.png', buf);
          return done();
        });
      });
      return specify("A Ground Symbol", function(done) {
        this.Ground = new Ground(50, 50, 50, 150);
        this.Renderer.drawComponent(this.Ground);
        return this.Renderer.getCanvas().toBuffer(function(err, buf) {
          if (err) {
            throw err;
          }
          fs.writeFile(__dirname + '/componentImages/ground.png', buf);
          return done();
        });
      });
    });
  });

}).call(this);
