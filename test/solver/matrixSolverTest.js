// Generated by CoffeeScript 1.4.0
(function() {

  define(['cs!CircuitSolver', 'cs!Circuit'], function(CircuitSolver, Circuit) {
    return describe("Matrix Solver", function() {
      beforeEach(function() {
        this.Solver = new CircuitSolver();
        this.circuitPermute = [0, 0, 0];
        this.solvedMatrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];
        return this.matrix3 = [[1, 2, 3], [4, 5, 6], [7, 8, 10]];
      });
      return describe("calling lu_factor", function() {
        beforeEach(function() {
          return this.result = this.Solver.luFactor(this.matrix3, 3, this.circuitPermute);
        });
        it("should factor a 3x3 nonsingular array", function() {
          return this.result.should.equal(true);
        });
        it("should initialize permute matrix", function() {});
        it("should solve matrix", function() {});
        it("should return false for a singular matrix", function() {});
        return describe("then calling lu_solve", function() {
          beforeEach(function() {
            return this.result = this.Solver.luSolve(this.matrix3, 3, this.circuitPermute, this.solvedMatrix);
          });
          it("should solve circuit matrix", function() {});
          return it("should not modify circuitMatrix", function() {});
        });
      });
    });
  });

}).call(this);
