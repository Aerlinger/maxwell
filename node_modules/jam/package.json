{
  "author": {
    "name": "Chakrit Wichian",
    "email": "service@chakrit.net",
    "url": "http://chakrit.net"
  },
  "name": "jam",
  "description": "JAM is (yet another) helper function for q.q.quickly chaining multiple continuations with a monadic twist so the chain itself can be returned and passed around.",
  "version": "0.2.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/chakrit/jam.git"
  },
  "main": "jam",
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "npm install jam \n---\n\nJAM it together like `this`:\n\n    jam(function() { doYourThing(); this(); })\n      (function() { doOtherThingWithCallback(this); })\n      (function() { doOtherThingWithCallbackArgs(this); })\n      (function(result) { doNodeJsStuff(this); })\n      (function(err, result) { setTimeout(this, 3000); })\n      (function() { /* yay! we're done! */ });\n\nThat is, the `this` object is the next function to be called.\nUse `this` when you would normally pass a callback. \n\nYou can even nest `JAM`s inside each other:\n\n    jam(function() { jam(function() { jam(function() { ....\n\nAnd the JAM chain would still execute correctly :)\n\nAnd oh, you know what? You can even pass JAMs around!\nTry the `test-passing.js` example to see what I mean :)\n\nWHY ?\n-----\n\nShort answer: Because none of the existing ones are simple enough for my taste.\n\nYeah, I know there're tons of other continuation helpers out there already\nbut there really isn't one where you could quickly just type-in the list\nof stuff to do and be done with it without worrying about forgetting to\nclose the list with a parenthesis or forgetting to add a comma. And yeah,\nIMO it is wayyy easier to just add a `(function() { })` block at the end\nbecause that's what you're usually doing all the time anyway taking care\nof all those JS variable scopes. And it is easier to copy/paste/reorder\nas well.\n\nAnother thing is that, most of them isn't very monadic. Yes, you *can*\nchain them. But then you can't pass those chains around or dynamically\nmodify them except maybe using a few `arguments` trick/utils to help you.\nThat has limited my ability to program and think somewhat especially\nsince you should be thinking a lot about asynchronous-ness and continuations\nwhen working on node.js (that's the whole point of the platform, ain't it?)\n\nSo I decided, WTH, I could just write one.  \n\nAnd you gotta admit, writing all these stuff is just god damned *fun*! XD\n",
  "readmeFilename": "README.md",
  "_id": "jam@0.2.2",
  "_from": "jam"
}
