// Generated by CoffeeScript 1.4.0
(function() {

  define(['cs!Point'], function(Point) {
    var MouseHandler;
    MouseHandler = (function() {

      function MouseHandler(Circuit) {
        this.Circuit = Circuit;
        this.mouseDown = false;
        this.mouseUp = false;
        this.mouseDownLocation = new Point();
        this.mouseUpLocation = new Point();
        this.mouseLocation = new Point();
        this.mouseDragLocation = new Point();
        this.mouseClickLocation = new Point();
      }

      MouseHandler.prototype.setState = function(newState) {
        if (newState === this.MOUSE_DOWN || newState === this.MOUSE_UP) {
          return this.mouseState = newState;
        } else {
          throw Error("State " + newState + " is not a valid state");
        }
      };

      MouseHandler.prototype.onMouseDown = function(x, y) {
        this.mouseDownLocation = new Point(x, y);
        this.mouseDown = true;
        this.mouseUp = false;
        return console.log("DOWN: " + x + ", " + y);
      };

      MouseHandler.prototype.onMouseUp = function(x, y) {
        this.mouseUpLocation = new Point(x, y);
        this.mouseUp = true;
        this.mouseDown = false;
        this.dragging = false;
        return console.log("UP: " + x + ", " + y);
      };

      MouseHandler.prototype.onMouseDrag = function(x, y) {
        this.mouseLocation = new Point(x, y);
        return this.dragging = true;
      };

      MouseHandler.prototype.onMouseClick = function(x, y) {
        return this.mouseClickLocation = new Point(x, y);
      };

      return MouseHandler;

    })();
    return MouseHandler;
  });

}).call(this);
