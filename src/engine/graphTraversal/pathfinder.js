// Generated by CoffeeScript 1.4.0
(function() {

  define(['cs!VoltageElm'], function(VoltageElm) {
    var Pathfinder;
    Pathfinder = (function() {

      Pathfinder.INDUCT = 1;

      Pathfinder.VOLTAGE = 2;

      Pathfinder.SHORT = 3;

      Pathfinder.CAP_V = 4;

      function Pathfinder(type, firstElm, dest, elementList, numNodes) {
        this.type = type;
        this.firstElm = firstElm;
        this.dest = dest;
        this.elementList = elementList;
        this.used = new Array(numNodes);
      }

      Pathfinder.prototype.findPath = function(node, depth) {
        var current, element, j, next_terminal_num, terminal_num, _i, _j, _k, _l, _len, _len1, _len2, _ref, _ref1, _ref2, _ref3;
        if (node === this.dest) {
          return true;
        }
        if ((depth-- === 0) || this.used[node]) {
          return false;
        }
        this.used[node] = true;
        _ref = this.elementList;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          element = _ref[_i];
          if (element === this.firstElm) {
            continue;
          }
          if (this.type === Pathfinder.VOLTAGE && (element.isWire() || element instanceof VoltageElm)) {
            continue;
          }
          if (this.type === Pathfinder.SHORT && !element.isWire()) {
            continue;
          }
          if (this.type === Pathfinder.CAP_V) {
            if (!(element.isWire() || element instanceof CapacitorElm || element instanceof VoltageElm)) {
              continue;
            }
          }
          if (node === 0) {
            _ref1 = Array(element.getPostCount());
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              j = _ref1[_j];
              if (element.hasGroundConnection(j) && this.findPath(element.getNode(j), depth)) {
                this.used[node] = false;
                return true;
              }
            }
          }
          terminal_num = 0;
          _ref2 = Array(element.getPostCount());
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            terminal_num = _ref2[_k];
            if (element.getNode(terminal_num) === node) {
              break;
            }
          }
          if (terminal_num === element.getPostCount()) {
            continue;
          }
          if (element.hasGroundConnection(terminal_num) && this.findPath(0, depth)) {
            this.used[node] = false;
            return true;
          }
          if (this.type === Pathfinder.INDUCT && element instanceof InductorElm) {
            current = element.getCurrent();
            if (terminal_num === 0) {
              current = -current;
            }
            if (Math.abs(current - this.firstElm.getCurrent()) > 1e-10) {
              continue;
            }
          }
          for (next_terminal_num = _l = 0, _ref3 = element.getPostCount(); 0 <= _ref3 ? _l < _ref3 : _l > _ref3; next_terminal_num = 0 <= _ref3 ? ++_l : --_l) {
            if (terminal_num === next_terminal_num) {
              continue;
            }
            if (element.getConnection(terminal_num, next_terminal_num) && this.findPath(element.getNode(next_terminal_num), depth)) {
              this.used[node] = false;
              return true;
            }
          }
        }
        this.used[node] = false;
        return false;
      };

      return Pathfinder;

    })();
    return Pathfinder;
  });

}).call(this);
